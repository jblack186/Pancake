<link rel="stylesheet" href="{{ 'header.css' | asset_url }}" media="print" onload="this.media='all'">

<noscript>{{ 'header.css' | asset_url | stylesheet_tag }}</noscript>
{%style%}
{%- if section.settings.positions -%}
#header-first.headers {
  position: sticky!important;
  height: {{section.settings.height}}px;
  width: 100%;
  top: 0px!important;
  left: 0px;
  z-index: 9;
  align-self: flex-start;

}


{%endif%}

.headers-sticky {
  display: flex;
  position: fixed!important;
  width: 100%;
  top: 0px!important;
  left: 0px;
  z-index: 999;
  align-items: center;
  height: {{section.settings.height}}px;


}


.headers {
 height: {{section.settings.height}}px;

}

.hero-three__content h2 {
  font-size: {{section.settings.font_size}}}px;
}

{%endstyle%}

{% case section.settings.header_type %}
  {% when 'headerOne' %}



<header class="{%- if section.settings.positions -%} headers-sticky {%else%} headers {%endif%}"  style="background: {{section.settings.header__background}}">
  <div id="main">
    <div class="d-flex mb-3 inputs">
        <div class="form-group">
            <input id="hours" class="form-control form-control-lg" type="number" min=0 value="0" name="hours" />h
        </div>
        <div class="form-group">
            <input id="minutes" class="form-control form-control-lg" type="number" min=0 value="5" name="minutes">m
        </div>
        <div class="form-group">
            <input id="seconds" class="form-control form-control-lg" type="number" min=0 value="0" name="seconds">s
        </div>
    </div>
    <div class="d-flex buttons justify-content-center">
        <button class="btn btn-outline-primary btn-start-resume">Start</button>
        <button class="btn btn-outline-primary btn-pause">Pause</button>
        <button class="btn btn-outline-primary btn-stop">Stop</button>
        <button class="btn btn-outline-primary btn-reset">Reset</button>
    </div>
</div>
  <ul class="header__list">
    <div class="header__list__left">
     
      {%- if link.links == blank -%}
        {%- for link in section.settings.menu.links -%}
          {%- if section.settings.menu != blank -%}
      <li class="header__list__left__item">
        <a style="color: {{section.settings.header__color}}" href="{{ link.url }}" class="{{section.settings.header_colors}}">{{ link.title | escape }}</a>
      </li>
    {%- endif -%}
  {%- endfor -%}
  {%- endif %}

      </div>
    
      <div class="header__list__mid">
        <a class="header__list__mid__logo">
          {%- if section.settings.logo != blank -%}
            {%- assign image_size = section.settings.logo_width | append: 'x' -%}
            <img srcset="{{ section.settings.logo | img_url: image_size }} 1x, {{ section.settings.logo | img_url: image_size, scale: 2 }} 2x"
              src="{{ section.settings.logo | img_url: image_size }}"
              loading="lazy"
              class="header__heading-logo"
              alt="{{ section.settings.logo.alt | default: shop.name | escape }}">
          {%- else -%}
            <span class="h2">{{ shop.name }}</span>
          {%- endif -%}
        </a>
    </div>
    <div class="header__list__right">
      <li class="header__list__right__item">
        <img class="header__list__right__item--search" src="{{ 'search.svg' | asset_url }}" alt="search" />
      </li>
      <li style="color: {{section.settings.header__color}}" class="header__list__right__item">
        MY ACCOUNT
      </li>
      <li class="header__list__right__item">
      <img  class="header__list__right__item--bag" src="{{ 'bag.svg' | asset_url }}" alt="bag" />

      </li>
      </div>
   
  </ul>
  <div class="mobile">
    <div> </div>
    <img class="mobile__bars" src="{{ 'menu.svg' | asset_url }}" alt="Bars" />

  </div> 

</header>


    {% when 'headerTwo' %}
      <div class="{%- if section.settings.positions -%} headers-sticky{%else%} headers {%endif%}"  style="background: {{section.settings.header__background}}">
        <ul class="header__list">
        <div class="header__list__mid">
          <a class="header__list__mid__logo">
            {%- if section.settings.logo != blank -%}
              {%- assign image_size = section.settings.logo_width | append: 'x' -%}
              <img srcset="{{ section.settings.logo | img_url: image_size }} 1x, {{ section.settings.logo | img_url: image_size, scale: 2 }} 2x"
                src="{{ section.settings.logo | img_url: image_size }}"
                loading="lazy"
                class="header__heading-logo"
                alt="{{ section.settings.logo.alt | default: shop.name | escape }}">
            {%- else -%}
              <span class="h2">{{ shop.name }}</span>
            {%- endif -%}
          </a>
            </div>
          <div class="header__list__left">
     
            {%- if link.links == blank -%}
              {%- for link in section.settings.menu.links -%}
                {%- if section.settings.menu != blank -%}
            <li class="header__list__left__item ">
              <a style="color: {{section.settings.header__color}}" href="{{ link.url }}" class="{{section.settings.header_colors}}">{{ link.title | escape }}</a>
            </li>
          {%- endif -%}
        {%- endfor -%}
        {%- endif %}
      
            </div>
                <div class="header__list__right">
            <li class="header__list__right__item">
              <img class="header__list__right__item--search" src="{{ 'search.svg' | asset_url }}" alt="search" />
            </li>
            <li  style="color: {{section.settings.header__color}}" class="header__list__right__item">
              MY ACCOUNT
            </li>
            <li class="header__list__right__item">
            <img  class="header__list__right__item--bag" src="{{ 'bag.svg' | asset_url }}" alt="bag" />
  
            </li>
            </div>
  
        </ul>
        <div class="mobile">
          <div></div>
          <img class="mobile__bars" src="{{ 'menu.svg' | asset_url }}" alt="Bars" />
  
        </div>
      </div>
        
{% endcase %}


{% schema %}
{
  "name": "t:sections.header.name",

  "settings": [
  {
  "type": "select",
  "id": "header_type",
  "label": "Type Of Header",
  "options": [
  {
  "value": "headerOne",
  "label": "Header 1"
  },
  {
  "value": "headerTwo",
  "label": "Header 2"
  }
  ],
  "default": "headerOne"
  },
  {
    "type": "checkbox",
    "id": "positions",
    "label": "Sticky header",
    "default": false
  },

  {
    "type": "color",
    "id": "header__background",
    "label": "Header background",
    "default": "#ffffff"
  },
  {
    "type": "color",
    "id": "header__color",
    "label": "Header text color",
    "default": "#000000"
  },


  {
    "type": "range",
    "id": "height",
    "min": 60,
    "max": 120,
    "step": 1,
    "default": 70,
    "label": "Height"
    },
    {
      "type": "select",
      "id": "header_colors",
      "label": "Header color",
      "default": "header-color1",
      "options": [
        {
          "value": "header-color1",
          "label": "Header color 1"
        },
        {
          "value": "header-color2",
          "label": "Header color 2"
        },
        {
          "value": "header-color3",
          "label": "Header color 3"
        }

      ]
    },
  {
  "type": "image_picker",
  "id": "logo",
  "label": "t:sections.header.settings.logo.label"
  },
  {
  "type": "range",
  "id": "logo_width",
  "min": 50,
  "max": 250,
  "step": 10,
  "default": 100,
  "unit": "t:sections.header.settings.logo_width.unit",
  "label": "t:sections.header.settings.logo_width.label"
  },
  
  {
  "type": "link_list",
  "id": "menu",
  "default": "main-menu",
  "label": "t:sections.header.settings.menu.label"
  },
  {
  "type": "link_list",
  "id": "menu_two",
  "default": "main-menu",
  "label": "Alternate Menu"
  }
  ]
  }
{% endschema %}


<script>
  const hoursEl = document.querySelector('#hours');
  const minutesEl = document.querySelector('#minutes');
  const secondsEl = document.querySelector('#seconds');
  const btnStart = document.querySelector('.btn-start-resume');
  const btnPause = document.querySelector('.btn-pause');
  const btnStop = document.querySelector('.btn-stop');
  const btnReset = document.querySelector('.btn-reset');
  let interval;
  let pause = false;
  let totalSeconds = 0;
  let totalSecondsBackup = 0;
  
  init();
  
  function init() {
      btnPause.style.display = 'none';
      btnStop.style.display = 'none';
      btnReset.style.display = 'none';
  
  
      btnStart.addEventListener('click', () => {
          const hours = parseInt(hoursEl.value);
          const minutes = parseInt(minutesEl.value);
          const seconds = parseInt(secondsEl.value);
  
          totalSecondsBackup = totalSeconds = hours * 60 * 60 + minutes * 60 + seconds;
          if (totalSeconds < 0) {
              return;
          }
  
          startTimer();
  
          btnPause.style.display = 'inline-block';
          btnStop.style.display = 'inline-block';
          btnReset.style.display = 'inline-block';
          btnStart.style.display = 'none';
      });
  
      btnPause.addEventListener('click', () => {
          pause = !pause;
          if (pause) {
              btnPause.innerText = 'Resume';
          } else {
              btnPause.innerText = 'Pause';
          }
      })
  
      btnStop.addEventListener('click', () => {
          stopTimer();
          totalSeconds = totalSecondsBackup;
          pause = false;
          updateInputs();
  
          btnPause.style.display = 'none';
          btnStop.style.display = 'none';
          btnReset.style.display = 'none';
          btnStart.style.display = '';
      })
  
      btnReset.addEventListener('click', () => {
          totalSeconds = totalSecondsBackup;
          updateInputs();
      })
  }
  
  function startTimer() {
      interval = setInterval(() => {
  
          if (pause) return;
          totalSeconds--;
          updateInputs();
  
          if (totalSeconds <= 0) {
              stopTimer();
          }
      }, 1000)
  }
  
  function stopTimer() {
      interval = clearInterval(interval);
  }
  
  function updateInputs() {
      const hours = Math.floor(totalSeconds / 60 / 60);
      const minutes = Math.floor(totalSeconds / 60);
      const seconds = totalSeconds % 60;
  
      hoursEl.value = hours;
      minutesEl.value = minutes;
      secondsEl.value = seconds;
  }
</script>